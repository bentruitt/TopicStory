Pretty much everything taken from this tutorial here:

    https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uwsgi-and-nginx-on-ubuntu-16-04

created news.ini file
---------------------

/home/ubuntu/news-app/newsapp/news.ini

    [uwsgi]
    module = wsgi:app
    master = true
    processes = 5
    socket = news.sock
    chmod-socket = 660
    vacuum = true
    die-on-term = true

Things to note:
  - The *.ini file is responsible for actually calling the python code which starts the server.
  - wsgi is the name of the file/module, app is the name of the a variable which starts the server with app.run().
  - eg, wsgi.py would be the name of the python file, which contains the variable named app.

created systemd file
--------------------

/etc/systemd/system/news.service:

    [Unit]
    Description=uWSGI instance to serve news
    After=network.target
    
    [Service]
    User=scott
    Group=www-data
    WorkingDirectory=/home/ubuntu/news-app
    Environment="PATH=/home/ubuntu/news-app/venv/bin"
    ExecStart=/home/ubuntu/news-app/venv/bin/uwsgi --ini /home/ubuntu/news-app/newsapp/news.ini
    
    [Install]
    WantedBy=multi-user.target

Things to note:
  - The systemd file is responsible for starting processes automatically.
  - The WorkingDirectory variable is equivalent to "cd /path/to/working/dir" and then running the script in ExecStart
  - Important because Python uses the directory from which the script was called to determine the python path for imports.

created nginx file
------------------

/etc/nginx/sites-available/news:

    server {
      listen 80;
      server_name topicstory.com www.topicstory.com;
    
      location / {
        include uwsgi_params;
        uwsgi_pass unix:/home/ubuntu/news-app/newsapp/news.sock;
      }
    }

enabled nginx
-------------

sudo ln -s /etc/nginx/sites-available/news /etc/nginx/sites-enabled
sudo nginx -t
sudo systemctl restart nginx
sudo ufw allow 'Nginx Full'

make sure AWS allows port 80
----------------------------
  - go to EC2 dashboard
  - click instances
  - click "lauch-wizard-3" or other link under "security groups"
  - click "inbound"
  - click "edit"
  - add type=http, port=80, source=0.0.0.0/0

restarting the server
---------------------
sudo systemctl restart news

checking on systemd calls
-------------------------
sudo systemctl status news
